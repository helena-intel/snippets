name: Snippet tests

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-24.04", "windows-latest"]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v5

        with:
          python-version: "3.12"

      - name: Get pip cache dir
        id: pip-cache
        shell: bash
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

      - name: pip cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-
          restore-keys: |
            ${{ runner.os }}-pip-


      - name: Install dependencies
        run: |
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
          pip install optimum-intel openvino openvino-genai pytest

      - name: Test snippets with release
        run: |
          pytest .
        env:
          CI: "True"

      - name: Install nightly
        run: |
          pip install --pre --upgrade openvino openvino-tokenizers openvino-genai --extra-index-url https://storage.openvinotoolkit.org/simple/wheels/nightly

      - name: Test snippets with nightly
        run: |
          pytest .
        env:
          CI: "True"

      - name: Download genai and build chat sample
        run: |
          python utils/download_nightly.py
          if [ "$RUNNER_OS" == "Linux" ]; then
              source `find ${HOME}/tools/openvino_genai -name setupvars.sh -print -quit`
          else:
              Get-ChildItem -Path . -Filter setupvars.ps1 -Recurse -File | Select-Object -First 1 | ForEach-Object { & $_.FullName }
          fi
          cd llm_chat/cpp
          mkdir build
          cd build
          cmake ..
          cmake --build . --config Release
          if [ "$RUNNER_OS" == "Linux" ]; then
              ./llm_chat
          else:
              .\Release\llm_chat.exe
          fi

